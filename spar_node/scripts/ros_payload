#!/usr/bin/env python3
import rospy
from gpiozero import AngularServo
from time import sleep
from std_msgs.msg import Bool

sub_a = None
sub_b = None


def callback_a(msg_in):
	if msg_in.data:
		rospy.loginfo("Setting output high!")
		servo_a = AngularServo(18, initial_angle = -90 ,min_pulse_width = 0.0006, max_pulse_width=0.0023)
		servo_a.angle = 90
		sleep(2)
		servo_a.angle = -90
		sleep(2)
		servo_a.close()
		
	else:
		rospy.loginfo("Setting output low!")

def callback_b(msg_in):
	if msg_in.data:
		rospy.loginfo("Setting output high!")
		servo_b = AngularServo(23, initial_angle = 90, min_pulse_width = 0.0006, max_pulse_width=0.0023)
		servo_b.angle = -90
		sleep(2)
		servo_b.angle = 90
		sleep(2)
		servo_b.close()
	else:
		rospy.loginfo("Setting output low!")

def shutdown():
	if sub_a is not None:
		sub_a.unregister()
	if sub_b is not None:
		sub_b.unregister()
	
	servo_a.close()
	servo_b.close()

if __name__ == '__main__':
	rospy.init_node('actuator_controller', anonymous=True)

	sub_a = rospy.Subscriber('/actuator_control/actuator_a', Bool, callback_a)
	sub_b = rospy.Subscriber('/actuator_control/actuator_b', Bool, callback_b)

	rospy.on_shutdown(shutdown)

	rospy.spin()


	